
import java.io.File;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FilenameUtils;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Yosep
 */
public class Data_Explorer extends javax.swing.JFrame {

    private String directorio;
    private String extension;
    private String fileName;
    private long fileSize;
    private String fileExtension;
    private String F_D;
    private DefaultTableModel model;
    
    /**
     * Creates new form Explorer_Data
     */
    public Data_Explorer() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        directorioTF = new javax.swing.JTextField();
        extensionTF = new javax.swing.JTextField();
        directorioBT = new javax.swing.JButton();
        extensionBT = new javax.swing.JButton();
        messageLB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Extension", "Tama√±o", "F/D"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleName("");
        jTable1.getAccessibleContext().setAccessibleDescription("");

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel1.setText("Indique la extension");

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel2.setText("Indique el directorio");

        directorioTF.setFont(new java.awt.Font("Consolas", 2, 12)); // NOI18N

        extensionTF.setFont(new java.awt.Font("Consolas", 2, 12)); // NOI18N

        directorioBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lupa_opt.png"))); // NOI18N
        directorioBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directorioBTActionPerformed(evt);
            }
        });

        extensionBT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lupa_opt.png"))); // NOI18N
        extensionBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extensionBTActionPerformed(evt);
            }
        });

        messageLB.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(extensionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                        .addComponent(directorioTF, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(directorioBT)
                                    .addComponent(extensionBT)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(messageLB, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 156, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(directorioTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(extensionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(directorioBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(extensionBT)
                        .addGap(43, 43, 43)))
                .addComponent(messageLB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void directorioBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directorioBTActionPerformed
        // TODO add your handling code here:
        
        model.setRowCount(0);
        
        
        directorio = directorioTF.getText();
        File f = new File(directorio);
            
        if(f.exists() && f.length() > 0){

            messageLB.setText("");
            String[] archivos = f.list();

            for(int i = 0; i < archivos.length; i++){

                f = new File(archivos[i]);
                fileName = f.getName();
                fileSize = f.length();
                fileExtension = FilenameUtils.getExtension(f.toString());

                if(f.isDirectory()) F_D = "Directorio";
                else F_D = "Fichero";


                model.addRow(new Object[]{fileName,fileExtension,fileSize,F_D});  
            }
        }else{

            messageLB.setText("El directorio no existe o esta vacio");

        } 
    }//GEN-LAST:event_directorioBTActionPerformed

    private void extensionBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extensionBTActionPerformed
        // TODO add your handling code here:
        
       
        model.setRowCount(0);
        
        directorio = directorioTF.getText();
        extension = extensionTF.getText();
        
        File f = new File(directorio);
            
        if(f.exists() && f.length() > 0 && extension.length() > 0){

            messageLB.setText("");
            String[] archivos = f.list();

            for(int i = 0; i < archivos.length; i++){

                f = new File(archivos[i]);
                
                if(FilenameUtils.getExtension(f.toString()).equals(extension)){
                    
                    fileName = f.getName();
                    fileSize = f.length();
                
                    if(f.isDirectory()) F_D = "Directorio";
                    else F_D = "Fichero";
                    
                    model.addRow(new Object[]{fileName,extension,fileSize,F_D});   
                }    
            }
        }else{

            messageLB.setText("La extension no existe o esta vacio");

        } 
        
    }//GEN-LAST:event_extensionBTActionPerformed

    /*JScrollPane pane = new JScrollPane(jTable1);
        
        extension = extensionTF.getText();
        
        for(int i = 0; i < model.getRowCount(); i++){
            
            Object getExtension = datosColumna(jTable1, 1, i);
            
            if(!getExtension.toString().equalsIgnoreCase(extension)){
                
                ((DefaultTableModel)jTable1.getModel()).removeRow(i);
                
            }
            
        }
    
    public Object datosColumna(JTable jTable1, int row_index, int col_index){
    return jTable1.getModel().getValueAt(row_index, col_index);
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Data_Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Data_Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Data_Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Data_Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Data_Explorer().setVisible(true);
            }
        });
        
       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton directorioBT;
    private javax.swing.JTextField directorioTF;
    private javax.swing.JButton extensionBT;
    private javax.swing.JTextField extensionTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel messageLB;
    // End of variables declaration//GEN-END:variables
}
